{"version":3,"sources":["../../src/index.js","app.js","index.js"],"names":["defaultRender","value","decimals","Number","toFixed","NumberEasing","speed","customFunctionRender","ease","renderValue","renderValueSet","useState","lastTarget","lastTargetSet","lastUpdateTime","lastUpdateTimeSet","Date","getTime","useEffect","callback","delay","savedCallback","useRef","current","id","setInterval","clearInterval","useInterval","absoluteProgress","easedProgress","Eases","functionRender","React","createElement","Fragment","EASING_LIST","Pre","Styled","pre","backgroundColor","padding","App","target","targetSet","currentEasing","currentEasingSet","onRandomizeTarget","Math","floor","random","accent","h","style","fontWeight","display","width","fontVariantNumeric","letterSpacing","justifyContent","info","onClick","map","easing","active","href","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e57f3bcd.chunk.js","sourcesContent":["import React, { useEffect, useState, useRef } from \"react\";\nimport Eases from \"eases\";\n\nfunction useInterval(callback, delay) {\n  const savedCallback = useRef();\n\n  useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  useEffect(() => {\n    function tick() {\n      savedCallback.current();\n    }\n    if (delay !== null) {\n      let id = setInterval(tick, delay);\n      return () => clearInterval(id);\n    }\n  }, [delay]);\n}\n\nfunction defaultRender(value, decimals) {\n  return Number(value).toFixed(decimals);\n}\n\nfunction NumberEasing({ value, speed = 500, decimals = 0, customFunctionRender, ease = \"quintInOut\" }) {\n  const [renderValue, renderValueSet] = useState(value);\n  const [lastTarget, lastTargetSet] = useState(value);\n\n  const [lastUpdateTime, lastUpdateTimeSet] = useState(new Date().getTime());\n\n  useEffect(() => {\n    lastUpdateTimeSet(new Date().getTime() - 16);\n    lastTargetSet(renderValue);\n  }, [value]);\n\n  useInterval(() => {\n    const currentTime = new Date().getTime();\n    const absoluteProgress = (currentTime - lastUpdateTime) / speed;\n\n    if (absoluteProgress >= 1) {\n      renderValueSet(value);\n    } else {\n      const easedProgress = Eases[ease](absoluteProgress);\n      renderValueSet(lastTarget + (value - lastTarget) * easedProgress);\n    }\n  }, 16);\n\n  const functionRender = customFunctionRender || defaultRender;\n\n  return React.createElement(React.Fragment, {}, [functionRender(renderValue, decimals)]);\n}\n\nexport default NumberEasing;\n","import React, { useEffect, useState } from 'react';\nimport Styled from 'styled-components';\n\nimport NumberEasing from 'react-number-easing';\n\nimport {\n  JBX,\n  Button,\n  HeaderH1,\n  Text,\n  Space,\n  Box,\n  A,\n  Ul,\n  Li,\n  Container,\n  Inline,\n  Tabs,\n  Tab,\n} from 'jbx';\n\nconst EASING_LIST = [\n  'cubicInOut',\n  'cubicIn',\n  'cubicOut',\n  'expoInOut',\n  'expoIn',\n  'expoOut',\n  'linear',\n  'quadInOut',\n  'quadIn',\n  'quadOut',\n  'quartInOut',\n  'quartIn',\n  'quartOut',\n  'quintInOut',\n  'quintIn',\n  'quintOut'\n];\n\nconst Pre = Styled.pre({\n  backgroundColor: '#ecf0f1',\n  padding: '16px'\n});\n\nfunction App() {\n  const [target, targetSet] = useState(0);\n  const [currentEasing, currentEasingSet] = useState('quintInOut');\n\n  function onRandomizeTarget() {\n    targetSet(Math.floor(Math.random() * 1024));\n  }\n\n  useEffect(() => {\n    onRandomizeTarget();\n  }, []);\n\n  return (\n    <Container>\n      <JBX accent={'#95a5a6'} />\n      <Box padding={2}>\n        <Space h={1} />\n        <HeaderH1\n          style={{\n            fontWeight: 900,\n            display: 'inline-block',\n            width: 'auto',\n            padding: '6px',\n            backgroundColor: 'var(--accent-color)'\n          }}\n        >\n          react-number-easing\n        </HeaderH1>\n        <Space h={1} />\n        <Text>React component for fancy number transitions.</Text>\n        <Space h={2} />\n\n        <Space h={1} />\n        <HeaderH1 style={{ fontVariantNumeric: 'tabular-nums', letterSpacing: -2 }}>\n          <NumberEasing decimals={0} value={target} ease={currentEasing} speed={1000} />\n        </HeaderH1>\n\n        <Space h={1} />\n\n        <Inline justifyContent=\"center\">\n          <Tab info>\n            <Text>Target:</Text>\n          </Tab>\n          <Tab info>\n            <Text style={{ fontWeight: 700 }}>{target}</Text>\n          </Tab>\n        </Inline>\n\n        <Button onClick={onRandomizeTarget}>Random Target</Button>\n\n        <Space h={1} />\n\n        <Tabs>\n          <Inline>\n            <Tab info>\n              <Text>Ease function: </Text>\n            </Tab>\n            {EASING_LIST.map((easing) => (\n              <Tab\n                active={currentEasing === easing}\n                key={easing}\n                onClick={() => {\n                  currentEasingSet(easing);\n                }}\n              >\n                <Text>{easing}</Text>\n              </Tab>\n            ))}\n          </Inline>\n        </Tabs>\n\n        <Space h={1} />\n        <Pre>\n          <code>\n            {`import NumberEasing from 'react-number-easing';\n\n/* Example */\n<NumberEasing\n  value={${target}}\n  speed={1000}\n  ease='${currentEasing}' />`}\n          </code>\n        </Pre>\n\n        <Space h={2} />\n\n        <Text>\n          Learn how to use and more information about the props on{' '}\n          <A href=\"https://github.com/javierbyte/react-number-easing\">github</A>.\n        </Text>\n\n        <Space h={2} />\n        <Text>More experiments:</Text>\n        <Space h={0.5} />\n        <Ul>\n          <Li>\n            <Text>\n              {'Create more cohesive color schemes, '}\n              <A href=\"https://javier.xyz/cohesive-colors/\">cohesive-colors</A>.\n            </Text>\n          </Li>\n          <Li>\n            <Text>\n              Find the visual center of your images / logos,{' '}\n              <A href=\"https://javier.xyz/visual-center/\">visual-center</A>.\n            </Text>\n          </Li>\n          <Li>\n            <Text>\n              JS AI Battle Game, <A href=\"https://clashjs.com/\">clashjs</A>.\n            </Text>\n          </Li>\n        </Ul>\n        <Space h={2} />\n        <Text>\n          Made by <A href=\"https://javier.xyz\">javierbyte</A>.\n        </Text>\n        <Space h={3} />\n      </Box>\n    </Container>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './app';\n// import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}